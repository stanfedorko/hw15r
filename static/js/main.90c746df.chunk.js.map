{"version":3,"sources":["logo.svg","serviceWorker.js","components/post/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Post","props","className","src","author","photo","alt","name","nickname","date","href","content","image","quantityСomment","quantityRepost","quantityFavorite","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,iKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCuCSC,MAvDf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKC,IAAKF,EAAMG,OAAOC,MAAOH,UAAU,mBAAmBI,IAAI,MAEjE,yBAAKJ,UAAU,gBACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,cACXD,EAAMG,OAAOG,KACd,uBAAGL,UAAU,4BAEf,0BAAMA,UAAU,aACbD,EAAMG,OAAOI,UAEhB,0BAAMN,UAAU,mBAChB,0BAAMA,UAAU,aACbD,EAAMQ,MAET,uBAAGC,KAAK,KAAKR,UAAU,kBAAiB,uBAAGA,UAAU,6BAEvD,uBAAGA,UAAU,qBACVD,EAAMU,SAET,yBAAKT,UAAU,sBACb,yBAAKC,IAAKF,EAAMW,MAAOV,UAAU,sBAAsBI,IAAI,MAE7D,yBAAKJ,UAAU,uBACb,uBAAGQ,KAAK,KAAKR,UAAU,oBACrB,uBAAGA,UAAU,8BACb,8BACGD,EAAMY,uBAGX,uBAAGH,KAAK,KAAKR,UAAU,oBACrB,uBAAGA,UAAU,0BACb,8BACGD,EAAMa,iBAGX,uBAAGJ,KAAK,KAAKR,UAAU,oBACrB,uBAAGA,UAAU,+BACb,8BACGD,EAAMc,mBAGX,uBAAGL,KAAK,KAAKR,UAAU,oBACrB,uBAAGA,UAAU,yBCrCzBc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAMd,OAAQ,CACVG,KAAM,mBACNF,MATa,6FAUbG,SAAU,eAEZG,QAAQ,kDACRC,MAZY,gGAaZH,KAAM,+BACNI,uBAAiB,MACjBC,eAAgB,MAChBC,iBAAkB,QAGpB,kBAAC,EAAD,CAAMX,OAAQ,CACVG,KAAM,eACNF,MApBU,2CAqBVG,SAAU,UAEZG,QAAQ,4DACRC,MAvBoB,sDAwBpBH,KAAM,+BACNI,uBAAiB,MACjBC,eAAgB,KAChBC,iBAAkB,OAGpB,kBAAC,EAAD,CAAMX,OAAQ,CACVG,KAAM,cACNC,SAAU,cAEZG,QAAQ,sCACRF,KAAM,+BACNI,uBAAiB,KACjBC,eAAgB,KAChBC,iBAAkB,OAGtBI,SAASC,eAAe,SFgFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.90c746df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nfunction Post(props) {\n  return (\n    <div className=\"Post\">\n      <div className=\"Post-account\">\n        <img src={props.author.photo} className=\"Post-account-img\" alt=\"\" />\n      </div>\n      <div className=\"Post-content\">\n        <div className=\"Post-content-header\">\n          <h5 className=\"Post-title\">\n            {props.author.name}\n            <i className=\"zmdi zmdi-check-circle\"></i>\n          </h5>\n          <span className=\"Post-info\">\n            {props.author.nickname}\n          </span>\n          <span className=\"Post-delimiter\"></span>\n          <span className=\"Post-info\">\n            {props.date}\n          </span>\n          <a href=\"#0\" className=\"Post-hide-link\"><i className=\"zmdi zmdi-chevron-down\"></i></a>\n        </div>\n        <p className=\"Post-content-text\">\n          {props.content}\n        </p>\n        <div className=\"Post-content-image\">\n          <img src={props.image} className=\"Post-attached-image\" alt=\"\" />\n        </div>\n        <div className=\"Post-content-footer\">\n          <a href=\"#0\" className=\"Post-footer-link\">\n            <i className=\"zmdi zmdi-comment-outline\"></i>\n            <span>\n              {props.quantityСomment}\n            </span>\n          </a>\n          <a href=\"#0\" className=\"Post-footer-link\">\n            <i className=\"zmdi zmdi-refresh-alt\"></i>\n            <span>\n              {props.quantityRepost}\n            </span>\n          </a>\n          <a href=\"#0\" className=\"Post-footer-link\">\n            <i className=\"zmdi zmdi-favorite-outline\"></i>\n            <span>\n              {props.quantityFavorite}\n            </span>\n          </a>\n          <a href=\"#0\" className=\"Post-footer-link\">\n            <i className=\"zmdi zmdi-share\"></i>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Post from './components/post';\n\nconst ANAKIN_IMAGE = \"https://upload.wikimedia.org/wikipedia/en/thumb/7/74/Anakin-Jedi.jpg/220px-Anakin-Jedi.jpg\";\nconst RAY_IMAGE = \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\";\nconst SFE_IMAGE = \"https://fedorko.pro/files/sfe-avatar.png\";\nconst SFE_MESSAGE_IMAGE = \"https://fedorko.pro/files/javascript-what-month.jpg\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Post author={{\n        name: \"Anakin skywalker\",\n        photo: ANAKIN_IMAGE,\n        nickname: \"@dart_vader\"\n      }}\n      content=\"WTF? Who is Ray? Why she is Skywalker? Luke...?\"\n      image={RAY_IMAGE}\n      date={\"26 февр.\"}\n      quantityСomment={\"482\"}\n      quantityRepost={\"146\"}\n      quantityFavorite={\"887\"}\n    />\n\n    <Post author={{\n        name: \"Stas Fedorko\",\n        photo: SFE_IMAGE,\n        nickname: \"@st_wh\"\n      }}\n      content=\"Hi guys! Do you know what month it is today? 😁\"\n      image={SFE_MESSAGE_IMAGE}\n      date={\"27 февр.\"}\n      quantityСomment={\"123\"}\n      quantityRepost={\"22\"}\n      quantityFavorite={\"38\"}\n    />\n\n    <Post author={{\n        name: \"Ivan Ivanov\",\n        nickname: \"@ivanushka\"\n      }}\n      content=\"Tomorrow I'll go change my name ...\"\n      date={\"28 февр.\"}\n      quantityСomment={\"24\"}\n      quantityRepost={\"18\"}\n      quantityFavorite={\"5\"}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}